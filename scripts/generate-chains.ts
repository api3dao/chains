import fs from 'fs';
import path from 'path';
import prettier from 'prettier';

const PRETTIER_CONFIG = path.join(__dirname, '../.prettierrc');
const INPUT_DIR = path.join(__dirname, '../chains');
const OUTPUT_DIR = path.join(__dirname, '../src/generated');
const OUTPUT_FILE = `${OUTPUT_DIR}/chains.ts`;

const HEADER_CONTENT = `// ===========================================================================
// DO NOT EDIT THIS FILE MANUALLY!
//
// The contents have been added automatically.
// See: scripts/generate-chains.ts for more information
// ===========================================================================

import { Chain } from '../types';
`;

async function mergeJsonFiles(): Promise<void> {
  const fileNames = fs.readdirSync(INPUT_DIR);
  const jsonFiles = fileNames.filter((fileName) => fileName.endsWith('.json'));
  const combinedChains: any = [];

  for (const jsonFile of jsonFiles) {
    const filePath = path.join(INPUT_DIR, jsonFile);
    const fileContentRaw = fs.readFileSync(filePath, 'utf-8');
    const fileContent = JSON.parse(fileContentRaw);
    combinedChains.push(fileContent);
  }

  const rawContent = `${HEADER_CONTENT}\nexport const CHAINS: Chain[] = ${JSON.stringify(combinedChains)};\n\n`;

  const prettierConfig = JSON.parse(fs.readFileSync(PRETTIER_CONFIG, 'utf-8'));
  const formattedContent = await prettier.format(rawContent, { ...prettierConfig, parser: 'typescript' });

  if (!fs.existsSync(OUTPUT_DIR)) {
    fs.mkdirSync(OUTPUT_DIR);
  }

  fs.writeFileSync(OUTPUT_FILE, formattedContent);
  console.log(`Combined chains been saved as ${OUTPUT_FILE}`);
}

mergeJsonFiles()
  .then(() => process.exit(0))
  .catch((error) => {
    console.log(error);
    process.exit(1);
  });
